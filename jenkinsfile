pipeline{
    agent any
    triggers {
        pollSCM('*/5 * * * *') 
    }
    tools{
    nodejs "node"
}
    environment {
        // Initialize global variables here
        DOCKER_REGISTRY = 'your-docker-registry-url'
        IMAGE_NAME = 'your-image-name'
        IMAGE_TAG = 'latest'
    }
    stages{
        stage("Initialization"){
            steps{
                script {
                    // Initialize global variables or perform other setup tasks
                    ENV_VAR_1 = 'value1'
                    ENV_VAR_2 = 'value2'
                }
            }
        }
        stage("Cleanup Workspace"){
            steps{
                cleanWs()
            }
        }
        stage("Checkout from SCM"){
            steps{
                git branch: 'main', credentialsId:'github', url:'https://github.com/adama007/MicroService'
            }
        }
        stage('Build') {
      steps {
        sh 'npm install'
         sh '<<Build Command>>'
      }
    }  
        stage("Test Application"){
            steps{
                sh "npm test"
            }
        }
        /** tage("Build Image"){
            steps{
                sh "docker build -t ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ."
            }
        }
        stage("Test Image"){
            steps{
                // Add steps to test the built Docker image
            }
        }
        stage("Push to Registry"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY"
                }
                sh "docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }
        stage("Cleanup"){
            steps{
                // Add cleanup steps here
                sh "docker rmi ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }**/
    }
    
}
